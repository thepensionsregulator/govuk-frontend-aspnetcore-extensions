@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<OverridableBlockListItem>;
@addTagHelper *, GovUk.Frontend.AspNetCore
@using GovUk.Frontend.Umbraco
@using GovUk.Frontend.Umbraco.Typography
@using GovUk.Frontend.Umbraco.Models
@using ThePensionsRegulator.Umbraco.BlockLists;
@using Umbraco.Cms.Core.Models
@using Umbraco.Extensions
@{
    var cssClasses = Model.Settings?.Value<string>(PropertyAliases.CssClasses);
    var listItems = Model.Content.Value<OverridableBlockListModel>("items")!;
}
<govuk-summary-list id="@Model.Content.Key" class="@cssClasses">
    @foreach (var listItem in listItems.Filter(listItems))
    {
        <govuk-summary-list-row class="@(listItem.Settings.Value<string>(PropertyAliases.CssClasses))">
            <govuk-summary-list-row-key>@(listItem.Content.Value<string>("itemKey"))</govuk-summary-list-row-key>
            <govuk-summary-list-row-value>@Html.Raw(GovUkTypography.Apply(listItem.Content.Value<string>("itemValue"), new TypographyOptions{ RemoveWrappingParagraph = true }))</govuk-summary-list-row-value>
            @{
                var actionsModel = listItem.Content.Value<OverridableBlockListModel>("actions")!;
                var actions = actionsModel.Filter(actionsModel);
                if (actions.Any()) 
                {
                    <govuk-summary-list-row-actions>
                    @foreach (var action in actions)
                    {
                        var link = action.Content.Value<Link>("link");
                        if (!string.IsNullOrEmpty(link?.Url))
                        {
                            <govuk-summary-list-row-action href="@(link.Url)" visually-hidden-text="@(listItem.Content.Value<string>("itemKey"))">@(action.Content.Value<string>("text"))</govuk-summary-list-row-action>
                        }
                    }
                    </govuk-summary-list-row-actions>
                }
            }
        </govuk-summary-list-row>
    }
</govuk-summary-list>
