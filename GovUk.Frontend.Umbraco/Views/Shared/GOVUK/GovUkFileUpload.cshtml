@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IOverridableBlockReference<IOverridablePublishedElement,IOverridablePublishedElement>>;
@addTagHelper *, GovUk.Frontend.AspNetCore
@addTagHelper *, GovUk.Frontend.AspNetCore.Extensions
@using GovUk.Frontend.Umbraco
@using GovUk.Frontend.Umbraco.Models
@using GovUk.Frontend.Umbraco.Validation
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using ThePensionsRegulator.Umbraco.Blocks;
@using ThePensionsRegulator.Umbraco;
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Strings;
@using Umbraco.Extensions
@{
    var modelPropertyName = Model.Settings.Value<string>(PropertyAliases.ModelProperty);
    ModelStateEntry? modelStateEntry = null;
    if (!string.IsNullOrEmpty(modelPropertyName))
    {
        ViewContext.ModelState.TryGetValue(modelPropertyName, out modelStateEntry);
    }
    var cssClass = Model.Settings.Value<string>(PropertyAliases.CssClasses);
    var labelIsPageHeading = Model.Settings.Value<bool>(PropertyAliases.LabelIsPageHeading);
    var label = Model.Content.Value<string>(PropertyAliases.FileUploadLabel)?.Replace("{{name}}", Umbraco.AssignedContentItem.Name);
    var hint = Model.Content.Value<IHtmlEncodedString>(PropertyAliases.Hint);
    var fileTypes = Model.Settings.Value<string>(PropertyAliases.FileUploadFileTypes);
    var errorMessagePrefix = Model.Settings.Value<string>(PropertyAliases.ErrorMessagePrefix);
    if (string.IsNullOrEmpty(errorMessagePrefix)) { errorMessagePrefix = "Error"; }
}
<govuk-client-side-validation
    error-message-required="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageRequired))">

    <govuk-file-upload name="@modelPropertyName" class="@cssClass" input-accept="@fileTypes">
        <govuk-file-upload-label is-page-heading="@labelIsPageHeading" class="@(labelIsPageHeading ? "govuk-label--l" : null)">@label</govuk-file-upload-label>
        @if (!string.IsNullOrWhiteSpace(hint?.ToHtmlString()))
        {
            <govuk-file-upload-hint>@hint</govuk-file-upload-hint>
        }
        <govuk-file-upload-error-message visually-hidden-text="@errorMessagePrefix">@((modelStateEntry is not null && modelStateEntry.Errors.Any(x => x.ErrorMessage != ValidationConstants.FIELDSET_ERROR)) ? string.Join(". ", modelStateEntry.Errors.Where(x => x.ErrorMessage != ValidationConstants.FIELDSET_ERROR).Select(x => x.ErrorMessage)) : null)</govuk-file-upload-error-message>
    </govuk-file-upload>
</govuk-client-side-validation>