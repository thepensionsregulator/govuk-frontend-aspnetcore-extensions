@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<OverridableBlockListItem>;
@addTagHelper *, GovUk.Frontend.AspNetCore
@using GovUk.Frontend.AspNetCore
@using GovUk.Frontend.Umbraco.Typography
@using GovUk.Frontend.Umbraco.Models
@using GovUk.Frontend.Umbraco;
@using ThePensionsRegulator.Umbraco.BlockLists;
@using Umbraco.Extensions
@{
    if (!Enum.TryParse(typeof(NotificationBannerType), Model.Settings.Value<string>("type"), out var bannerType))
    {
        bannerType = NotificationBannerType.Default;
    }
    var heading = GovUkTypography.Apply(Model.Content.Value<string>("heading"), new TypographyOptions{ RemoveWrappingParagraph = true });
    var text = GovUkTypography.Apply(Model.Content.Value<string>("text"), new TypographyOptions { RemoveWrappingParagraph = false });
    var blocks = Model.Content.Value<OverridableBlockListModel>(PropertyAliases.NotificationBannerBlocks);
    var classNames = Model.Settings.Value<string>("cssClasses");
}
<govuk-notification-banner type="@((NotificationBannerType)bannerType!)" class="@classNames">
    @if (!string.IsNullOrEmpty(Model.Settings.Value<string>("title")))
    {
        <govuk-notification-banner-title>@(Model.Settings.Value<string>("title"))</govuk-notification-banner-title>
    }
    @if (string.IsNullOrEmpty(text) && !string.IsNullOrEmpty(heading))
    {
        <p class="govuk-notification-banner__heading">@Html.Raw(heading)</p>
    }
    else 
    {
        if (!string.IsNullOrEmpty(heading))
        {
            <h3 class="govuk-notification-banner__heading">@Html.Raw(heading)</h3> 
        }
        @Html.Raw(text)
    }
    
    @await Html.PartialAsync("GOVUK/BlockList", blocks)
</govuk-notification-banner>