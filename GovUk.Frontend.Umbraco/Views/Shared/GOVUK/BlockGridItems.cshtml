@using GovUk.Frontend.Umbraco.Services;
@using ThePensionsRegulator.Umbraco.Blocks;
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IEnumerable<BlockGridItem>>
@inject IEnumerable<IPartialViewPathProvider> pathProviders;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    if (Model?.Any() != true) { return; }
}

<div class="umb-block-grid__layout-container">
    @foreach (var item in Model)
    {
        var overridable = new OverridableBlockGridItem(item);

        <div
            class="umb-block-grid__layout-item"
            data-content-element-type-alias="@item.Content.ContentType.Alias"
            data-content-element-type-key="@item.Content.ContentType.Key"
            data-element-udi="@item.ContentUdi"
            data-col-span="@item.ColumnSpan"
            data-row-span="@item.RowSpan"
            style=" --umb-block-grid--item-column-span: @item.ColumnSpan; --umb-block-grid--item-row-span: @item.RowSpan; ">
            @{
                var pathToView = string.Empty;
                foreach (var pathProvider in pathProviders)
                {
                    if (pathProvider.IsProvider(item))
                    {
                        pathToView = pathProvider.BuildPartialViewPath(item);
                        break;
                    }
                }
                if (string.IsNullOrEmpty(pathToView))
                {
                    throw new InvalidOperationException(
                    $"No {nameof(IPartialViewPathProvider)} was found to provide a path for the block with content key {item.Content.Key}, of content type {item.Content.ContentType.Alias}"
                    );
                }
                
                @await Html.PartialAsync(pathToView, overridable)
            }
        </div>
    }
</div>

