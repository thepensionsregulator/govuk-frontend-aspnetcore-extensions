@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IOverridableBlockReference<IOverridablePublishedElement,IOverridablePublishedElement>>;
@addTagHelper *, GovUk.Frontend.AspNetCore
@using GovUk.Frontend.AspNetCore
@using GovUk.Frontend.Umbraco.Models
@using GovUk.Frontend.Umbraco;
@using ThePensionsRegulator.Umbraco.Blocks;
@using ThePensionsRegulator.Umbraco;
@using Umbraco.Cms.Core.Strings;
@using Umbraco.Extensions
@{
    if (!Enum.TryParse(typeof(NotificationBannerType), Model.Settings.Value<string>("type"), out var bannerType))
    {
        bannerType = NotificationBannerType.Default;
    }
    var heading = Model.Content.Value<IHtmlEncodedString>("heading");
    var text = Model.Content.Value<IHtmlEncodedString>("text");
    var blocks = Model.Content.Value<OverridableBlockListModel>(PropertyAliases.NotificationBannerBlocks);
    var classNames = Model.Settings.Value<string>("cssClasses");
}
<govuk-notification-banner type="@((NotificationBannerType)bannerType!)" class="@classNames">
    @if (!string.IsNullOrEmpty(Model.Settings.Value<string>("title")))
    {
        <govuk-notification-banner-title>@(Model.Settings.Value<string>("title"))</govuk-notification-banner-title>
    }
    @if (string.IsNullOrWhiteSpace(text?.ToHtmlString()) && !string.IsNullOrWhiteSpace(heading?.ToHtmlString()))
    {
        <p class="govuk-notification-banner__heading">@heading</p>
    }
    else 
    {
        if (!string.IsNullOrEmpty(heading?.ToHtmlString()))
        {
            <h3 class="govuk-notification-banner__heading">@heading</h3> 
        }
        @text
    }
    
    @await Html.PartialAsync("GOVUK/BlockList", blocks)
</govuk-notification-banner>