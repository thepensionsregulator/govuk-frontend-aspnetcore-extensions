@using System.Globalization;
@using System.Web;
@addTagHelper *, GovUk.Frontend.AspNetCore
@model GovUk.Frontend.AspNetCore.Extensions.Models.PaginationModel
@if (Model != null && Model.PageSize.HasValue && Model.TotalItems > Model.PageSize)
{
    var path = Model.Path ?? Context.Request.Path;
    var queryString = Model.QueryString ?? Context.Request.QueryString;
    var query = HttpUtility.ParseQueryString(queryString.ToString());
    query.Remove(Model.QueryStringParameter);

    var totalPages = (int)Math.Ceiling((decimal)Model.TotalItems / Model.PageSize.Value);
    var previousPage = Model.PageNumber - 1;
    var nextPage = Model.PageNumber + 1;

    var page1Href = path + (query.Count > 0 ? "?" + query.ToString() : string.Empty);
    var previousHref = page1Href;
    if (previousPage > 1)
    {
        query[Model.QueryStringParameter] = previousPage.ToString(CultureInfo.InvariantCulture);
        previousHref = path + "?" + query.ToString();
    }
    query[Model.QueryStringParameter] = nextPage.ToString(CultureInfo.InvariantCulture);
    var nextHref = path + "?" + query.ToString();

    if (totalPages <= Model.LargeNumberOfPagesThreshold)
    {
        <govuk-pagination landmark-label="@Model.LandmarkLabel">
            @if (Model.PageNumber > 1)
            {
                var previousLabel = Model.PreviousPageLabel.Replace("{{page}}", previousPage.ToString(CultureInfo.InvariantCulture)).Replace("{{total}}", totalPages.ToString(CultureInfo.InvariantCulture));
                <govuk-pagination-previous href="@Html.Raw(previousHref)" label-text="@previousLabel" />
            }
            @if (Model.PageNumber * Model.PageSize < Model.TotalItems)
            {
                var nextLabel = Model.NextPageLabel.Replace("{{page}}", nextPage.ToString(CultureInfo.InvariantCulture)).Replace("{{total}}", totalPages.ToString(CultureInfo.InvariantCulture));
                <govuk-pagination-next href="@Html.Raw(nextHref)" label-text="@nextLabel" />
            }
        </govuk-pagination>
    }
    else
    {
        <govuk-pagination landmark-label="@Model.LandmarkLabel">
            @if (Model.PageNumber > 1)
            {
                <govuk-pagination-previous href="@Html.Raw(previousHref)" />
                <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", "1"))" href="@Html.Raw(page1Href)">1</govuk-pagination-item>
                @if (Model.PageNumber > 2)
                {
                    if ((previousPage - 1) > 1)
                    {
                        if ((previousPage -2) == 1)
                        {
                            query[Model.QueryStringParameter] = (previousPage - 1).ToString(CultureInfo.InvariantCulture);
                            <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", (previousPage - 1).ToString(CultureInfo.InvariantCulture)))" href="@Html.Raw(path + "?" + query.ToString())">@(previousPage - 1)</govuk-pagination-item>
                        }
                        else
                        {
                            <govuk-pagination-ellipsis />
                        }
                    }
                    <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", previousPage.ToString(CultureInfo.InvariantCulture)))" href="@Html.Raw(previousHref)">@previousPage</govuk-pagination-item>
                }
            }
            <govuk-pagination-item is-current="true" href="@(Model.Path + Model.QueryString)">@Model.PageNumber</govuk-pagination-item>
            @if (Model.PageNumber * Model.PageSize < Model.TotalItems)
            {
                <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", nextPage.ToString(CultureInfo.InvariantCulture)))" href="@Html.Raw(nextHref)">@nextPage</govuk-pagination-item>
                @if (totalPages > nextPage)
                {
                    if (totalPages > nextPage + 1)
                    {
                        if (totalPages == nextPage + 2)
                        {
                            query[Model.QueryStringParameter] = (nextPage+1).ToString(CultureInfo.InvariantCulture);
                            <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", (nextPage +1).ToString(CultureInfo.InvariantCulture)))" href="@Html.Raw(path + "?" + query.ToString())">@(nextPage + 1)</govuk-pagination-item>
                        }
                        else
                        {
                            <govuk-pagination-ellipsis />
                        }
                    }
                    query[Model.QueryStringParameter] = totalPages.ToString(CultureInfo.InvariantCulture);
                    <govuk-pagination-item visually-hidden-text="@(Model.PageVisuallyHiddenText.Replace("{{page}}", totalPages.ToString(CultureInfo.InvariantCulture)))" href="@Html.Raw(path + "?" + query.ToString())">@totalPages</govuk-pagination-item>
                }
                <govuk-pagination-next link-href="@Html.Raw(nextHref)" />
            }
        </govuk-pagination>
    }
 }