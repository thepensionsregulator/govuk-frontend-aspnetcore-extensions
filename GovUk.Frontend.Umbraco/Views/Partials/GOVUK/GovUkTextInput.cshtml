@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<OverridableBlockListItem>;
@addTagHelper *, GovUk.Frontend.AspNetCore
@addTagHelper *, GovUk.Frontend.AspNetCore.Extensions
@using GovUk.Frontend.Umbraco
@using GovUk.Frontend.Umbraco.Typography
@using GovUk.Frontend.Umbraco.Models
@using GovUk.Frontend.Umbraco.Validation
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Umbraco.Extensions
@{
    var modelPropertyName = Model.Settings.Value<string>(PropertyAliases.ModelProperty);
    ModelStateEntry? modelStateEntry = null;
    if (!string.IsNullOrEmpty(modelPropertyName))
    {
        ViewContext.ModelState.TryGetValue(modelPropertyName, out modelStateEntry);
    }
    var prefix = Model.Settings.Value<string>("prefix");
    var suffix = Model.Settings.Value<string>("suffix");
    var label = Model.Content.Value<string>("label")?.Replace("{{name}}", Umbraco.AssignedContentItem.Name);
    var labelIsPageHeading = Model.Settings.Value<bool>("labelIsPageHeading");
    var cssClasses = Model.Settings.Value<string>(PropertyAliases.CssClasses);
    string? inputClass = null;
    var inputWidth = Model.Settings.Value<string>("textInputWidth");
    if (!string.IsNullOrEmpty(inputWidth))
    {
        switch (inputWidth)
        {
            case "xx-small":
                inputClass = "govuk-input--width-2";
                break;
            case "x-small":
                inputClass = "govuk-input--width-3";
                break;
            case "small":
                inputClass = "govuk-input--width-4";
                break;
            case "medium":
                inputClass = "govuk-input--width-5";
                break;
            case "large":
                inputClass = "govuk-input--width-10";
                break;
            case "x-large":
                inputClass = "govuk-input--width-20";
                break;
            case "xx-large":
                inputClass = "govuk-input--width-30";
                break;
        }
    }
    
    var hint = GovUkTypography.Apply(Model.Content.Value<string>("hint"), new TypographyOptions { RemoveWrappingParagraph = true });
    var invalid = modelStateEntry?.Errors.Any().ToString().ToLowerInvariant() ?? "false";
}
<govuk-client-side-validation
    error-message-required="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageRequired))"
    error-message-regex="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageRegex))"
    error-message-email="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageEmail))"
    error-message-phone="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessagePhone))"
    error-message-length="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageLength))"
    error-message-minlength="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageMinLength))"
    error-message-maxlength="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageMaxLength))"
    error-message-range="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageRange))"
    error-message-compare="@(Model.Settings.Value<string>(PropertyAliases.ErrorMessageCompare))"
>
    <govuk-input name="@modelPropertyName" value="@modelStateEntry?.AttemptedValue" class="@cssClasses" input-class="@inputClass" input-aria-invalid="@invalid">
        <govuk-input-label is-page-heading="@labelIsPageHeading" class="@(labelIsPageHeading ? "govuk-label--l" : null)">@label</govuk-input-label>
        @if (!string.IsNullOrWhiteSpace(hint))
        {
            <govuk-input-hint>@Html.Raw(hint)</govuk-input-hint>
        }
        @if (modelStateEntry != null && modelStateEntry.Errors.Any(x => x.ErrorMessage != ValidationConstants.FIELDSET_ERROR))
        {
            <govuk-input-error-message>@(string.Join(". ", modelStateEntry.Errors.Where(x => x.ErrorMessage != ValidationConstants.FIELDSET_ERROR).Select(x => x.ErrorMessage)))</govuk-input-error-message>
        }
        @if (!string.IsNullOrEmpty(prefix))
        {
            <govuk-input-prefix>@prefix</govuk-input-prefix>
        }
        @if (!string.IsNullOrEmpty(suffix))
        {
            <govuk-input-suffix>@suffix</govuk-input-suffix>
        }
    </govuk-input>
</govuk-client-side-validation>